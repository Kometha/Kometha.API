// <auto-generated />
using System;
using Kometha.API.Dataa;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kometha.API.Migrations
{
    [DbContext(typeof(KomethaDBContext))]
    [Migration("20250810020046_Seeding Data For Difficulties and Regions")]
    partial class SeedingDataForDifficultiesandRegions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kometha.API.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7674c000-85d1-469b-8460-5043b6fc5575"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("6a7f1c92-f224-4b23-a6db-28e556f054db"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("871fa652-2c1c-48f8-aedd-a6708089d5a7"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("Kometha.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7674c000-85d1-469b-8460-5043b6fc5575"),
                            Code = "AKL",
                            Name = "AuckLand",
                            RegionImageUrl = "https://allasfileserver.s3.amazonaws.com/productos_fotos/thumbnails/01-200104-0410M_1_1.png"
                        },
                        new
                        {
                            Id = new Guid("52636623-dd18-4067-b6a0-03cea9aaf7c2"),
                            Code = "TGU",
                            Name = "TEGUCIGALPA",
                            RegionImageUrl = "https://allasfileserver.s3.amazonaws.com/productos_fotos/thumbnails/01-200104-0410M_2_2.png"
                        },
                        new
                        {
                            Id = new Guid("3e23d63a-1df4-4303-87a2-baa4653f846c"),
                            Code = "SPS",
                            Name = "SAN PEDRO SULA"
                        });
                });

            modelBuilder.Entity("Kometha.API.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("Kometha.API.Models.Domain.Walk", b =>
                {
                    b.HasOne("Kometha.API.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kometha.API.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
